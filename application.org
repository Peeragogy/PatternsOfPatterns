#+Title: PATTERNS OF PATTERNS
# #+AUTHOR: Ligne Étale
# #+Date: June 14th 2021
#+CATEGORY: ERG
#+OPTIONS: toc:nil author:nil date:nil title:nil
#+LATEX_ENGINE: xelatex
#+BIBLIOGRAPHY: /home/joe/pattern-reboot/main.bib
#+HTML_HEAD: <script src="https://hypothes.is/embed.js" async></script>
# #+LATEX_HEADER: \RequirePackage[table]{xcolor}
#+LATEX_CLASS: acmart
#+LATEX_CLASS_OPTIONS: [acmlarge,timestamp]
#+LATEX_HEADER: \usepackage{fontspec}
# #+LATEX_HEADER: \DeclareHookRule{begindocument}{acmlarge}{after}{float}
# #+LATEX_HEADER: \usepackage[a4paper,bindingoffset=0.2in,left=1in,right=1in,top=1in,bottom=1in,footskip=.25in]{geometry}
#+LATEX_HEADER: \usepackage{xunicode}
#+LATEX_HEADER: \usepackage[no-sscript]{xltxtra}
#+LATEX_HEADER: \usepackage{natbib}
# #+LATEX_HEADER: \usepackage[math-style=french]{unicode-math}
# #+LATEX_HEADER: \usepackage{mathtools}
# #+LATEX_HEADER: \usepackage{lscape}
#+LATEX_HEADER: \usepackage{float}
# #+LATEX_HEADER: \setmonofont[Color=blue]{Ubuntu Mono}
#+LATEX_HEADER: \usepackage{starfont}
#+LATEX_HEADER: \newfontfamily{\alch}{Alchemy}
#+LATEX_HEADER: \newfontfamily\emoji{DejaVu Sans}
#+LATEX_HEADER: \newcommand{\Asclepius}{{\emoji\symbol{"2695}}}
#+LATEX_HEADER: \newcommand{\Caduceus}{{\emoji\symbol{"2624}}}
# #+LATEX_HEADER: \newfontfamily{\mm}[Color=red]{DejaVu Sans Mono}
#+LATEX_HEADER: \setmainfont{Libertinus Sans}
#+LATEX_HEADER: \usepackage[multiple]{footmisc}
# #+LATEX_HEADER: \newcommand{\hookuparrow}{\mathrel{\rotatebox[origin=c]{90}{$\hookrightarrow$}}}
# #+LATEX_HEADER: \definecolor{pale}{HTML}{fffff8}
# #+LATEX_HEADER: \definecolor{orgone}{HTML}{83a598}
# #+LATEX_HEADER: \definecolor{orgtwo}{HTML}{fabd2f}
# #+LATEX_HEADER: \definecolor{orgthree}{HTML}{d3869b}
# #+LATEX_HEADER: \definecolor{orgfour}{HTML}{fb4933}
# #+LATEX_HEADER: \definecolor{orgfive}{HTML}{b8bb26}
# #+LATEX_HEADER: \definecolor{gruvbg}{HTML}{1d2021}
# #+LATEX_HEADER: \newenvironment*{emptyenv}{}{}
# #+LATEX_HEADER: \usepackage{sectsty}
# #+LATEX_HEADER: \sectionfont{\normalfont\color{red}\selectfont}
# #+LATEX_HEADER: \subsectionfont{\normalfont\selectfont}
# #+LATEX_HEADER: \paragraphfont{\normalfont\selectfont}
# #+LATEX_HEADER: \subsubsectionfont{\normalfont\selectfont\color{black}}

# Joe and Ray to talk about sort out the related work section within the next two hours - after 30 minute break
# Add acknowledgements.
# Cite the Futures paper as a preprint.
# Joe to submit via their form or via email or whatever — probably won’t be up until midnight
# Any feedback to Joe by 2PM UK on Monday — note in the Google doc is fine
# JC: Aim to submit 6PM my time on Monday
# charlotte Podcast is up;! https://share.transistor.fm/s/1349d232

\input{title-stuff}
* Abstract                                                        :noexport:
:PROPERTIES:
:UNNUMBERED: t
:END:
<<Abstract>>

* Introduction
<<Introduction>>

In 1999, Christopher Alexander discussed the future of the pattern
theory with an audience of programmers. Here, we revisit the questions
he asked using an established technique from future studies. The
contribution in this paper is firstly, methodological, and secondly,
constructively-critical:
- We demonstrate how methods from future studies, design pattern
  theory, and distributed project management can be combined.
- Our analysis points to issues that the design pattern community will
  wish to consider as it shapes its own further development.

** Outline of Methods
:PROPERTIES:
:UNNUMBERED: t
:END:

We detail three techniques which can help a community carry out
self-evaluation and peer learning.  Each of these methods has natural
use-cases when considered in isolation.  When combined, they provide a
more holistic mixed pattern.  (We mean this in a precise sense, as
will be explained in due course.)

*** Project Action Review is the sensory element: systematically gathering and verifying observational data.
:PROPERTIES:
:UNNUMBERED: t
:END:

This technique is structured around five questions which members of
the community discuss and answer, typically during or after an event
such as a meeting or working sesion; it is also possible to perform
“pre-PARs” to envision the way a project might develop.  This practice
generates record of the event, as seen through the eyes of the
participants, along with their evaluation of what transpired.
Projects which use PARs are have a good chance of staying grounded
reality as circumstances evolve.  Researchers who wish remain open to
learning new things and being surprised by novelties (and anomalies)
can use the PAR to remain open minded.  Integrating with other
methods, we can, e.g., use PARs to check how effective our design
patterns are in practice and revise our use of them accordingly.

*** Causal Layered Analysis is the cognitive element: giving organization and depth to the enterprise.
:PROPERTIES:
:UNNUMBERED: t
:END:

Causal Layered Analysis combines techniques from poststructuralism,
macrohistory, and postcolonial multicultural theory.  The goal of this
methodology is to achieve a deep and inclusive understanding by
integrating empiricist, interpretative, critical, and actionable
knowledge surrounding a topic of concern.  Without CLA, or something
similar, there’s a risk of getting lost in the details, whether
practical or theoretical.  A CLA-based meta-review can provide a
skeleton that puts together the fleshy PAR components, assembling what
would be disjecta membra into a coherent body of self-knowledge.  By
critically re-examining concerns which might remain implicit in
pattern language, CLA facilitates more effective design.  It achieves
this by avoiding or untangling muddles: for example, CLA could help us
understand why we had prized a technological solution to what, upon
consideration, turned out to be a fundamentally social issue; or
vice-versa.

*** Design Pattern Language is the motor element: orchestrating and scaffolding action
:PROPERTIES:
:UNNUMBERED: t
:END:

Individual design patterns present solutions to recurring problems in
a way that can be combined with other patterns and adapted to
different situations.  A DPL is a common language which a community
can use to discuss matters of design and serve as a repository of
shared knowledge.  Having carefully analyzed the situation and
identified a possible solution, we must plot a course of action that
accounts for the complexities of the situation.  The flexibility of
DPLs can be customized to our particular circumstances.

** Summary of Findings
:PROPERTIES:
:UNNUMBERED: t
:END:

In the Case Study section, we focus on the concrete use of the methods
described above in the context of planning and managing a
transdiciplinary reserach seminar that studies the Emacs editor.  We
show how we have used PARs, CLA, and DPLs, to develop a sense of
direction for our research in concert with related efforts.  This case
study provides a detailed practical example that other projects across
the pattern language pace may wish to emulate (or adapt) in their
settings.

In the Survey, we use CLA to analyse design patterns methods.  DPLs
provide a general-purpose design methodology.  However, the high-level
evolution of this method in response to criticism, innovation,
technical developments, and long-term cultural change has not been
previously studied in an integrated manner.  CLA allows us to surface
the direction of travel of pattern language methods, by helping us
integrate foundational perpsecties and empirical observation.  We
identify trends within the pattern discourse towards transdiciplinary
thinking and large-scale collaboration; and we connect Alexander's
concept of wholeness with the broader evolution of Western
philosophical thought.  This, in turn, shapes our understanding of
what pattern language can do.

** Outline of implications
:PROPERTIES:
:UNNUMBERED: t
:END:

In our Discussion we draw out the implications for the future of
design patterns.  We look at how DPLs and CLA have been applied
(separately) to the well-established problem of anthropogenic climate
change. We suggest that the integrated strategy we propose could lead
to more satisfactory outcomes on problems at this scale.  We then
develop four scenarios for the possible future development of
pattern-theoretic methods.  As a Conclusion, we present a PAR for the
paper as a whole.  This is offered as an example of a potential
best-practice for pattern authors, on the view that widespread aoption
of this method would help improve collaboration within the design
patterns community.

* Methods
<<methods>>
** Design Patterns
Let’s begin by setting to one side any specialist notion of ‘patterns’
that we may have in mind, and think about patterns in a fundamental
way.  Some patterns repeat in /space/, some in /time/, some in both /space
and time/: a tiling, a beat, a wave.  In the physical world, it would
seem that patterns cannot repeat exactly, or forever.  The elements
that comprise a pattern are subject to spatial or temporal
displacement, and other forms of variation.

Let’s now explore the notion of ‘design pattern’ starting from this
foundation.  Leitner supplied the following summary: "[Design]
Patterns are shared as complete methodic descriptions intended for
practical use by experts and non-experts" \citep{leitner2015a}.  As we
look into the matter further, two central features emerge.  Like an
ellipse, the concept of the design pattern has two main foci: context
and community.
# [fn:: An ellipse is the set of all points in a plane such that the sum of their distances from two fixed points is a constant.]

- /Context/ shapes and constrains the type of activity which is being considered, such as designing a building, or writing software.
- /Community/ encompasses the stakeholders --- experts and non-experts alike --- who are involved with or affected by a particular project.

Integral to the basic concept of a design pattern is a third feature
that describes the interaction of the community and the context.  The
community uses the pattern to overcome some real or potential /conflict/
that they experience within this context.  The conflict is also
referred to as a /problem/; its resolution is described as a /solution/.
Alexander and Poyner emphasised that ‘design’ is not needed when the
conflict can be resolved in an obvious or straightforward manner.  For
example, you typically would not need a design process surrounding
/sitting in a chair/, because “under normal conditions each one of the
tendencies which arises in this situation can take care of itself”
\citep[p.~311]{alexander1970a}.

All of this means that design patterns need to achieve something
fairly subtle.  Each represents the synthesis of a repeatable solution
to a type of conflict which itself repeats within a particular
context.  Furthermore, it does this a way that makes the solution
teachable, learnable, and otherwise replicable within a given
community.  However, if the design pattern makes the solution to the
problem too obvious, then “design”, /per se/, is no longer needed![fn::
For example, Peter Norvig argued that we see fewer of the design
patterns typical of object oriented programs inside programs written
in functional and dynamic languages, because these languages embed
many of the typical patterns as language features.]  Accordingly, we
might say that the design pattern carries with it a fragment of
irreducible complexity.  This perspective may or may not be
surprising.

Alexander had described the need for patterns when things get complex
cite:alexander1964notes.  He specifically focuses on what could be
called “horizontal” complexity, a situation where there are a lot of
moving parts and relations between them.  Methodologically this is
elaborated with the notion of a /pattern language/.[fn:: The issues involved become somewhat more complex when there are multiple languages, but not fundamentally different; on a procedural note,
in what follows small caps will denotes references to external patterns, whereas all-caps will denote references to patterns described in the current text.]  Pattern languages
have a property of unfolding, from more general to more specific.
However, they seem to leave open deeper forms of “vertical”
complexity, where there are deep historical or ontogenetic causes, or
complex conceptual issues, which are not readily expressible in
design-pattern-theoretic terms.  Let’s have another look at these
issues by way of two contrasting metaphors.

The first metaphor comes from Christian Kohls, who proposed to treat
each design pattern as a journey: “a path as a solution to reach a
goal” cite:kohls2010a.  In this metaphor, design patterns are
understood to have an initial condition and an end condition, defined
within some context, which also defines a cost function on traversals
of paths.  There are two problems: the more elementary problem is to
traverse the terrain and travel from the start state to the end state
at low cost; the second problem is to find a reliably repeatable way
to do this.  Once found, the low-cost path can be described to and
traversed by others.

The second metaphor comes from Joseph Campbell, who described a kind
of “archetypal pattern” cite:shalloway2005a, one that can be found
embedded in myths and stories across diverse cultures and historical
periods.  The “hero’s journey” is also typically described with a path
cite:campbell1949a, however, in this case the path runs in a circle,
and focuses on the transformations of the hero who traverses it.
Although an account of the journey can be shared, traversal is
effectively single-use.  The cost is typically “high.”
Nevertheless, once a myth or metaphor is established by way of a
shared narrative, the journey can be reenacted through ritual or
engaged with in other ways that solve a range of social problems
cite:handelman1998a.

This should suggest that Kohls’s metaphor does not fully express the
complexity that is underpins each design pattern.  To really get a
handle on /the future of the pattern theory/ cite:alexander1999a, we
need another approach.

** Causal Layered Analysis
<<CLA_patterns>>
#+NAME: tabpatterns
#+CAPTION: CLA by example: a short story
#+ATTR_LATEX: :format longtable :align |p{\textwidth}|
||
| $$\raisebox{3ex}{A.}\vspace{-1cm}|
| \textparagraph1 Imagine a couple who on their first date together goes out for pizza. They like different toppings, but that doesn't particularly matter, because each of them orders their own perfectly sized Neopolitan-style pizza, and eats it with gusto. Indeed, it turns out they like pizza so much that they wish to have it several nights a week. Going out so frequently would be expensive, so they get good at making their own pizzas together at home: Selecting fresh ingredients, fermenting the dough, and baking at a high temperature. They get really good at baking pizza. They start to daydream about opening their own resaurant. |
| \textparagraph2 They look into the available practical guidance and adapt it for their use case. After a lot of planning and a whole lot of work, they do, indeed, get a pizzeria up and running, and moreover they are doing good business. However, as more time passes they begin to notice a considerable strain on their relationship. Many arguments ensue, about who should be managing the restaurant, on what days, where to get the ingredients, and how much they should spend.  They want to “sort it out”.  However, after a few discussions, they find it difficult to tease out the real reason for their dissagreements and end up even more frustrated. |
| \textparagraph3 It takes them some time and a few serendipitous encounters with friends to come to grips with the real challenges.  As it turns out, one of the two is deeply motivated by a vision of self reliance, inspired by historical figures like Thoreau. They see living "off-grid" as an ideal, a way to be independent from modern civilization, more in touch with nature, and more responsible for their actions. Their partner, on the other hand, envisions an ideal community where healthy relationships are facilitated over good meals, and believe all people should have the oportunity to enjoy similar experiences like their first date.  These two worldviews — while not disjoint — are not automatically well aligned, either. So, if the couple wishes to resolve the stress that they are facing, they would be wise to wonder if their problems originate at an even deeper level:  one which they may never have explored with one another before. |
| \textparagraph4 The couple see a wise counsellor who helps them identify a strategy helps them to respond to their circumstances, firstly by reconnecting with each other: they close the shop Monday through Wednesday, to spend time away from the business, to develop their own ideas, and to tend their garden together.  For Thursday through Sunday, they resolidify their intention to not only bake the pizzas with love, but also love each other while doing it|
||

We begin this section by introducing Inayatullah’s
cite:inayatullah1998b,inayatullah2004causal Causal Layered Analysis
(CLA) formalism by way of two examples, in Table [[tabpatterns]]: a short
motivating story that should communicate an intuitive feeling for the
four layers, and an initial brief recollection of the patterns
literature across the /surface/, /social/, /worldview/, and /myth/.  To help
make the CLA practicable as a /method/, we resummarise five techniques
that Inayatullah refers to as the /poststructural futures toolbox/ in an
Appendix [[appendix]].
** PARs

The US Army produced a methodology called the /After Action Review/ or
AAR cite:Training-the-Force.  AARs can be used to assign
responsibility when things ‘go wrong’, and can help people figure out
how to do better next time.  The method has been used effectively in business
settings cite:learning-in-the-thick-of-it. In a more fully collaborative and distributed peer-to-peer setting, we
needed an adaptation of the AAR that made it a more open ended. We
came up with the following template:

1. Review the intention: what do we expect to learn or make together?
2. Establish what is happening: what and how are we learning?
3. What are some different perspectives on what’s happening?
4. What did we learn or change?
5. What else should we change going forward?

When we fill in the template, we call it “doing a /PAR”/.  As an
acronym, “PAR” has stood for various things over the years —
Peeragogical Action Review, Project Action Review — but we typically
use it as a stand-alone term.  Allusively, it brigns to mind the
corresponding concept of /par/ in golf, and helps give us a sense of how
we are doing at any given point in time.[fn:: “In golf, par is the
predetermined number of strokes that a proficient golfer should
require to complete a hole, a round (the sum of the pars of the played
holes), or a tournament (the sum of the pars of each round).” —
Wikipedia] Like the Army, we typically use PARs retrospectively (so,
asking, “what /did/ we expect to learn or make together?”).  In this
sense “doing a PAR” shares some common ground with the
\textsc{Daily Scrum} and \textsc{Sprint Retrospective}
cite:sutherland2019a patterns from Scrum.  However, PARs can be used
without the product orientation of Scrum.

Indeed, PARs can also be applied to look forward,
proactively, as a way to scaffold anticipation by “remembering the future”
cite:arnkil2008remembering.  In that case, item #5 can be expanded to
include a number of different forward-looking scenarios.
Some further things to note at this stage:

- PARs are related to patterns, in that they describe a context, and
  surface problems and solutions that arise or are likely to arise in
  that context.  They might be seen as a template for proto-patterns.
  However, they do not necessarily have a strong ‘repeating’ aspect.

- Once when we have collected a suitable number of PARs, we can use
  them as data for analysis with CLA.  Metaphorically, CLA
  ‘integrates’ the ‘tangent vectors’ that characterise the
  observations we gather as we work together, to reconstruct the
  shared meaning of this work.

** Summary
Having described DPL, CLA, and PAR methods we are in a position to
explain how they combine into one holistic pattern, in Leitner’s sense
of a complete methodic description.  We will write this down using the
classical DPL format describing the associated context, problem
denoting a conflict, together with a solution.  As it happens, the
three acronyms can be combined and remixed in a clever way.

*** PLACARD
<<PLACARD>>
- *Context*: In the course of working on a project together: /we use the PAR to understand and establish our working context/.
- *Problem*: Although we encounter many difficulties in this context, our effort to understand them is challenged by the fact that the problems span different layers and scales: /we use the CLA to understand the problem/.
- *Solution*: Once we have grasped the problem, we need to elaborate an actionable solution that remains adaptable to ongoing changes in the context: /we use DPL to elaborate the solution/.

\noindent
The following section provides an integrated example of this pattern in use.

#+ATTR_ORG: :width 700px
#+ATTR_HTML: :width 700px
#+ATTR_LATEX: :width .6\textwidth
#+CAPTION: Mnemonic illustration of the [[PLACARD][PLACARD]] pattern
[[file:placard.jpg]]


* Case study: Planning “Season 1” for the Emacs Research Group
<<Figure>>

This section summarises the concrete application of the methods
from Section [[methods]] within an active seminar, the Emacs
Research Group, which was convened following EmacsConf
2020.[fn:: https://emacsconf.org/2020/; the conference took
place November 28th and 29th of 2020.]  We illustrates how the
three methods introduced above interoperate.  In our case, this
analysis has allowed us develop a trajectory for the project:
as a case study, it gives a reasonably self-contained example.
We think of the work carried out up to this point as *Season 0*,
on the view that our thinking has developing rhizomatically,
underground, rather than fully in the public sphere.  This
analysis contextualise our work relative to the PLoP and
Peeragogy communities, and the wider DPL discourse.
During the 25 sessions of our seminar to date, we have used CLA in
combination with PARs to address the question ‘What is our
vision for change and how is progress measurable?’.  More
specifically: we did a PAR at the end of every (approximately
weekly, two-hour) session.[fn:: Data archived at
https://github.com/exp2exp/exp2exp.github.io, with meeting
notes and PARs indexed and viewable on the web at
https://exp2exp.github.io/erg.]  This allowed us to track
progress, and to surface key issues and concerns.  Then, every
six weeks or so, we merged selected bullet-points from these
PARs into the CLA outline, depending on which section they
seemed to fit best.  We then jointly elaborated those bullet
points into a narrative form, and began to develop TODO items
that would make the /next steps/ for this seminar group both
actionable and meaningful.[fn:: The Peeragogy approach to
patterns is aligned with the feminist principle is that /all
knowledge is incomplete/
(https://mitpress.podbean.com/e/experiments-in-open-peer-review/,
minute 5).  A “living” patterns is attached to next steps that
would help to realise the pattern within a context; when we
don’t have any next steps, we put the pattern in a
\textsc{Scrapbook}.]  We collate these next steps with known
peeragogy design patterns like \textsc{Roadmap}
cite:peeragogy-handbook-long.[fn:: See http://peeragogy.org/top
for a reworking of the /Peeragogy Handbook/ as a unified pattern
language, which extends the earlier presentation in
cite:patterns-of-peeragogy.]

# We elaborate new patterns where
# there is no match for our current needs; one per CLA section:
# [[FORMALISE][FORMALISE]], [[SERENDIPITY][SERENDIPITY]], [[RECOMMENDER][RECOMMENDER]] and [[DIVERSITY][DIVERSITY]].  We also
# cross-reference each of the TODO items with the most closely
# associated patterns from the poststructural futures toolbox
# from Section [[CLA_patterns]].  This shows how the lines of
# thinking that underpins the CLA method can inform further
# action: *Season 1* will be shaped by this narrative and the
# corresponding TODO items.

** Understanding data, headlines, empirical world (short term change)

We’ve made progress since we started with the raw themes of *Research
on/in/with Emacs* back in December 2020.  We’ve met almost every week
since then, and interviewed some interesting and varied guests.  We
have a clearer idea of what what we want to talk about at the next
EmacsConf, and how we can be of service to researchers and Emacs
users.  We have been using a workflow that helps us carefully review
progress, diagnose issues, and manage our energy.  The next phase of
this project is to “go public” and mesh with ongoing related
activities elsewhere, including by getting some training events up and
running.
# [fn:: Our plans for *Season 1* should allow flexibility for [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]], since we may all be thinking about things differently, and we will have different outside commitments. This will allow us to develop a [[GENEALOGY][GENEALOGY]] of the themes and actions we are developing. This helps to realise the [[DISTANCE][DISTANCE]] pattern, since we can understand our efforts through the eyes of others. This helps to realise the [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND FUTURES]] pattern, because we better understand how the project looks for someone who is just getting started now. A suitable degree of formality can assist with [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]], see further details in the [[FORMALISE][FORMALISE]] pattern.]

| Maintain plans for the next six months                  | \textsc{Roadmap}     |
| Keep doing PARs and CLAs                                | \textsc{Assessment}  |
| Mesh with other ongoing activities elsewhere            | \textsc{Cooperation} |
| New user workshops: “Zero to Org Roam”                  | \textsc{Newcomer}    |
| Come up with a categorical treatment of todo-categories | FORMALISE            |

** Systemic approaches and solutions (social system)

If we tackle big enough projects, it will bring with it the need for
collaboration.  We like to create tangible deliverables (e.g. journal
articles). However, “If we knew what the outcome was, it wouldn’t be
research” — therefore, we’re focusing initially on research methods
and design documents. That may result in a longer time to write
initial papers, but when something is released it is more thoroughly
prepared. Meanwhile, we keep our skills sharp by fixing bugs,
improving our own workflows, and actively exploring the landscape. All
these activities are part of the system we implement regularly, which
minimizes technical debt and allows space for serendipity to occur.

# [fn:: This uses the specific affordances of Emacs and research as tools for [[DECONSTRUCTION][DECONSTRUCTION]] of adjacent contexts. We could provide a variety of different services, keeping in mind that we have the advantage of “Lisp as alien technology”. Such stakeholders might be identified by imagining [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND FUTURES]], in which Lisp or a structured approach to text editing is applied in new domains.  For example, what new affordances might Emacs bring to managing a collection of design patterns? This could support us in [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]], as we think about different ways to present the material we are working with. By relating this work to design patterns we position ourselves relative to other historical developments, and begin to do some new thinking about these developments: this is an opportunity to develop some [[GENEALOGY][GENEALOGY]]; we pursue that in Section [[Ground]]. By expecting the unexpected we [[DISTANCE][DISTANCE]] ourselves somewhat from current circumstances; see further details in the [[SERENDIPITY][SERENDIPITY]] pattern.]

| Identify potential stakeholders in Emacs Research               | \textsc{Community}          |
| Identify stakeholders in the kind of activities we can support  | \textsc{A Specific Project} |
| Identify venues where we can reach these different stakeholders | \textsc{Wrapper}            |
| Create some publication to plant a flag for our group           | \textsc{Paper}              |
| Keep exploring!                                                 | SERENDIPITY                 |

** Worldview, ways of knowing and alternative discourse

We have looked at RStudio and Roam Research as models of (some of) the
kinds of things we think Emacs can learn from and eventually improve upon.
‘Practice’ and ‘method’ keep coming up in our discussions as,
respectively, ‘more bottom up’ and ‘more top down’ ways of actualising
things.  Concretely, we’ve been studying our own processes and looking
for the tools and settings that are the most conducive to the work we
want to do.  For example, instead of having a single Org Roam
directory shared via Git, what if we had ways of managing sharing of
notes across ‘graphs’?

Collaboration is familiar to teams across all domains. Even authors
working alone will collaborate with their past and future selves. What
is common for all collaborators is that the transfer of information
must be uninhibited.  If we all had our slipboxes online, we could
reference between them.  This would generalise *ORCiD*, and people to
reference processes that are undergoing evolution.  Maybe a service
like this would turn into a ‘Tinder for academics’ — helping to match
people based on their interests (or similar people in different
fields).  So, what’s the price point?  Instead of paying money to go
to conferences, now we can spontaneously make conferences and
workshops.  As a guess, $750.0 per user per year might be a fair price
— for those who can afford to pay it — if the service helps people to
do better research and saves a bunch of travel.  We could also set up
a pricing model proportional to each country’s carbon emissions or
something like that.
# [fn:: Whereas these are existing commercial packages, some of the workflows could be restructured and, e.g., made more accessible or potentially more powerful through integration with other open tools. This is a way of [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]] at the level of projects and business operations. We recognise that we’re all coming from different places with [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND FUTURES]].  How can our workflow better reflect that? Can we engage in an ongoing [[DECONSTRUCTION][DECONSTRUCTION]] of the methods as we use them? (Admittedly, a little bit like rebuilding the plane while it is still flying, but with some care it should be possible.) We can think about different ways of approaching knowledge construction as a way of deepening the [[GENEALOGY][GENEALOGY]] pattern in practice. By developing a paper that situates our work in a wider context we develop some [[DISTANCE][DISTANCE]] from the closed-doors of *Season 0* and engage more creative thinking (and others’ views on!) *Season 1*. Clearly, this is a way to operationalise [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]]; see further details in the [[RECOMMENDER][RECOMMENDER]] pattern.]

| Spec out the Emacs based ‘answer’ to RStudio, Roam Research                  | \textsc{Community}  |
| Develop our own intention-based workflow                                     | \textsc{Forum}      |
| Continue to develop and refine our methods                                   | \textsc{Assessment} |
| Product and business development plans for a multigraph interlinking service | \textsc{Website}    |
| A tool to find and match peers/content                                       | RECOMMENDER         |

** Myths, metaphors and narratives: imagined (longer term change)

In our concrete methods, we have aligned ourselves with the ‘[[https://longtermist.substack.com/][long-term
perspective]]’.  This includes both retrospective and prospective
thinking.  For example, the things that were timely 7 years ago might
not be so timely now; in many cases the relevance of a given
innovation goes down over time.  However, Emacs has an evolutionary
character that has allowed it to keep up with the times — becoming
more relevant and useful ever since Steele and Stallman started to
systematise [[https://www.oreilly.com/openbook/freedom/ch06.html][Editor MACroS]] for the Text Editor and Corrector (TECO)
program.  Not only has the technology evolved, but so has the social
setting in which this work is done.  Whereas the concepts underlying
the free software movement were based on “[[http://www.gnu.org/software/emacs/emacs-paper.html][communal sharing]]” of source
code, these methods can be extended and allow us to synthesise new
relationships within broader semiotic commons.  Emacs can become part
of a system for addressing large-scale existential problems, by
expanding the frontier of what’s possible for human beings.
# [fn:: As we develop the relationships of Emacs to its context, the process can operationalise [[DECONSTRUCTION][DECONSTRUCTION]]. We referenced \textsc{Assessment} above with regard to PARs and CLAs; here we can imagine other techniques for assessing learning, thinking across [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND FUTURES]] in which these methods become more embedded in technological workflows. One way to proceed could be through a [[DECONSTRUCTION][DECONSTRUCTION]] of the practices of free/libre/open source; see further details in the [[DIVERSITY][DIVERSITY]] pattern.]

| Survey related work                 | \textsc{Context}    |
| Assess what we’re learning          | \textsc{Assessment} |
| Figure out the gender balance stuff | DIVERSITY           |

* Survey: Causal Layered Analysis of the Design Pattern Languages literature
<<Ground>>

# From Leo:

# # Hi, I was wondering what the link was...
# # JC: Oops.
# # Fresh from long EmacsConf meeting about "improving EmacsConf".

# From Charlotte

# Conduit: if you build it they won’t necessarily come.  You have to be mindful and cultivate.

# Show them around the conduit.  Listen to what their realities are.

# From Charlie

# # read through 3.2, likes the use of the Peeragogy stuff
# # Pizza example is well done
# # Quatro Staggioni — CLA pizza for Inayattulah

# There’s a lot of stuff being introduced — this is a risk

# Max-Neef could be used as a check:   "do we need all this stuff"

# From Joe.

# # How do we respond to CA’s essay about the future of the pattern theory

# # JC: Has to sign up for rowing in July!

# CD: A connection could be made to Emacs — we’re going to need better software, better interfaces
# RP: Could we use Emacs to help make his dream come true?
#     Forgotten traditions of AI might be useful again now

# JC: I see this working, it might inspire something further.

#     — This could be a direction for future work!

#     — We did want something in that section (and completed by First Monday of some month!)

# From Ray.

# # Strategy: How could the diverse things fit into a bigger picture?

In the last section we narrowed our attention to ERG and studied the
PARs closely.  In this section we will broaden our gaze to include the
larger community of which ERG is a part.  By situating what we learned
in this larger context and comparing ERG with another subcommunity, we
gain new perspectives.  We will see how some of the terms and concepts
we have encountered have been interpreted and implemented differently
elsewhere.  This, in turn, suggests opportunities for mutual learning
and dialogue which can lead to more comprehensive understanding.  To
illustrate this, we present an example based on "openness".

So to speak, ERG and PLoP are both opjects in a larger hierarchy and,
as such, multiply inherit attributes from larger communities of which
they are subcomminties and historical communities to which they are
heirs.  As an example, ERG is a suncommunity of the larger emacs
community and thus inherits two core tenets at the woldview level:
- Free Open-Source Ssoftware, as defined by the "four freedoms"
- EMACS as extensible customizable as self-documenting
Both of these themes are rooted in the worldviews and myths of the
hacker culture in which Stallman and Steele participated and some of
whose worldview and myths are described by Gabriel.  The former tenet
is grounded in the "gift economy" aspect of this culture and latter
tenet is grounded in the "self-organized emergence" aspect.

For comparison, we look to another subcommunity.  Whereas Stallman,
Steele, and Gabriel come from the functional programming subcommunity,
Cunningham comes from object-oriented programming subcommunity.  One
initiative associated to the latter subcommunity is the pattern wiki.
Here too we find "openness" as a key value at the worldview level,
upon closer examination, we find significant differences of emphasis
and interpretation.  For Emacs, the emphasis is on availability of
source code and the right to reuse it.  For Cunningham, the emphasis
was on in situ editability and community effort:
#+begin_quote
The original wiki technology functioned in a direct open-source mode,
which allowed individuals to contribute small pieces to incrementally
improve the whole.
#+end_quote
We gain further perspective from the critiques of Gene Demby and Ashe
Dryden, who point out that that open source community may not be so
open to newcomers from different gender and ethnic backgrounds.  After
examining these three instances, we can seek a more comprehensive
understanding of the concepts of openness, explore dialectic tensions,
and initiate dialogue.

As a way of gathering this contextual backgound, we will now apply CLA
to the DPL literature.

With the tools from Section [[methods]] at our disposal, and an awareness
of how they have been concretely applied within Section [[Figure]], we now
turn to a CLA of design patterns.  We draw on DPL to assist us in this
analysis, namely the patterns from Section [[CLA_patterns]]; however, in
this section, we omit PARs.  Future developments building on this
analysis might bring them back in, along with TODO items and
connections to other patterns, as shown in the previous section.

** Litany: Understanding data, headlines, empirical world (short term change)

The first layer in CLA is the *surface level*.  In the case of the
design patterns discourse, this level includes, for example, the
familiar kinds of patterns that are published in papers, discussed at
PLoP, put into use in designs of various kinds, or debated by
practitioners (e.g., Christopher Alexander’s “Entryway Transition”
pattern, but also his remarks about how people who attempted to apply
his methods ended up placing “alcoves everywhere”, etc.). This is
sometimes also referred to as the *problem level*: in the patterns
discourse, this is all fairly familiar, because problems abound.  The
other synonym for this layer is the *litany layer*: it describes the
problems that everyone is familiar with.

The pattern community is comfortable with problems: a ‘problematizing’
view of reality is one of the main features of the
method.  However, there are a range of problems that the community is
familiar with which are not fully solved.  For example, ‘Alexander's
Problem’, as described by his collaborator Greg Bryant:

#+begin_quote
... despite all of the tools he created, his penetrating research, his
many well-wrought projects, and his excellent writing, he did not
manage to grant, to his readers, the core sensibility that drove the
work. He also did not organize the continuance of the research program
that revolves around this sensibility. cite:bryant2015
#+end_quote
Coming at similar issues from a different direction, Alexander framed
a related query for programmers using pattern methods:
#+begin_quote
What is the Chartres of programming? What task is at a high enough
level to inspire people writing programs, to reach for the stars?
cite:alexander1999a
#+end_quote
These are some of the high-level problems that are known and discussed
in the patterns community, but which do not necessarily have consensus
answers.  More recently, Dawes and Ostwald cite:dawes2017a develop an
elegant taxonomy of existing criticisms of the pattern method.  In
outline, their taxonomy covers criticisms at the following three
layers:
- Conceptualisation :: Ontology, Epistemology \newline /(e.g., “Rejecting pluralistic values confuses subjective and objective phenomena”)/
- Development and documentation :: Reasoning, Testing, Scholarship \newline\hfill /(e.g., “The definitions of ‘patterns’ and ‘forces’ are inexplicit”)/
- Implementation and outcomes :: Controlling, Flawed, Unsuccessful \newline\hfill /(e.g., “Patterns disallow radical solutions”)/

By showing how the criticisms relate to one another, Dawes and Ostwald
begin to develop a [[GENEALOGY][GENEALOGY]] at the level of critical perspectives.
At the very least the critiques they examine show that there is not just
one pattern discourse, but many.  In a parallel work the same authors analyse
the structure of /A Pattern Language/, and develop three alternative perspectives on
/APL/'s contents, which they refer to as the *generalised*, *creator*, and
*user* perspectives cite:Dawes2018.  These perspectives amount to different techniques
for [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]].  We will elaborate at the next level.

** System: Systemic approaches and solutions (social system)
Beyond that, we have the *social phenomena* that cause the problems to emerge — along with the
familiar solutions.  In the original setting in which patterns
developed, this layer might include causes such as more people living
in cities, combined with the possibility of developing a more
community-driven approach to design.

At this level, we examine where the familiar problems come from.
Using graph-theoretic measures Dawes and Ostwald cite:Dawes2018 found
that:

- The creator model appears to be /less intelligible/ than the user model, while
- The creator’s perspective of the language is /more beautiful/.

Their central finding, however, is that many patterns in which
Alexander had medium or low confidence in fact occupy a relatively
central position in /APL/'s graph:

#+begin_quote
the patterns which are most likely to be encountered by designers –
are most easily accessed, or provide greatest access to other patterns
– might be those which Alexander acknowledged were incapable of
providing fundamental solutions to the problems they addressed.
#+end_quote

This means that novice users could be expected to encounter problems
in application of /APL/'s patterns: “despite its often authoritative and
dogmatic tone, Alexander’s text was framed as a work in progress,
rather than a definitive design guide” (p. 22).  Dawes and Ostwald
suggest that their analysis could point to “prime opportunities to
continue the development of /A Pattern Language/'' (p. 21).

Here, however, a range of issues more closely linked to software and
media begin to crop up.  There are a range of ‘other’ pattern
discourses which could be relevant here — ‘other’ in the sense
mentioned in our [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]] pattern, so not necessarily in
close touch with PLoP — these include PurPLSoc and the world of
practicing architects.  There have been some attempts at creating
systematic archives of patterns, but these have always had significant
buy-in from a wide community.

Importantly, the first-ever Wiki was developed in connection with a
platform for developing, sharing, and revising pattern languages
cite:cunningham2013a.[fn:: http://wiki.c2.com/?PeopleProjectsAndPatterns][fn:: http://c2.com/ppr/]
However, there was a distinction between the discussions and the finished patterns.  In the 2013 retrospective,
Ward Cunningham writes:
#+begin_quote
The original wiki technology functioned in a direct open-source mode,
which allowed individuals to contribute small pieces to incrementally
improve the whole.
#+end_quote
This is true if by “open source” we understand /what you see when you click Edit/ — but
the term is misleading relative to contemporary usage, which is usually linked with
the Open Source Initiative’s definition, and centred on the premise that
“Open source doesn’t just mean access to the source code.”[fn:: https://opensource.org/osd]
On the c2 wiki, licensing was restrictive. Discussions were to take place in “letters and replies” rather than revision or annotation of the published patterns; rights associated with the finished patterns were closely guarded.[fn:: http://c2.com/ppr/titles.html][fn:: http://c2.com/ppr/about/copyright.html]

Although Wiki technology could in principle have been a site for
ongoing [[DECONSTRUCTION][DECONSTRUCTION]] of patterns, this didn’t seem to happen on c2.
This is itself interesting and worth deconstructing a bit.  Notably, there were only /four/ published “letters and
replies”.[fn:: http://c2.com/ppr/letters/index.html]  Unfortunately,
we could not find a public archive of the “design patterns mailing
list” where further discussions took place.  This is certainly
suggestive of contingency.

Over the years, other issues and concerns came to the fore.
Jenifer Tidwell’s charges against the Gang of Four (alongside other
developer-centric pattern languages) resonate with what we saw in
Dawes and Ostwald, above:

#+begin_quote
... the reality of a software artifact that the developer sees is not
the only one that's important.  What about the user's reality?  Why
has that been ignored in all the software patterns work that's been
done?  Isn't the user's experience the ultimate reason for designing a
building or a piece of software?  If that's not taken into account,
how can we say our building -- or our software -- is “good”? — http://www.mit.edu/~jtidwell/gof_are_guilty.html
#+end_quote

Notice that now the /user/ of the designed artefact has entered the
story as a different figure from the user of the pattern language,
whom we met above.  Tidwell’s critique suggests at least a
couple [[ALTERNATIVE PASTS AND
 FUTURES][ALTERNATIVE PASTS AND FUTURES]]: e.g., what if the end-user had been
placed at the centre the whole time?  Alternatively, what if the
primary focus of patterns was to facilate interaction between
different stakeholders?  The fact that Tidwell’s book
cite:tidwell2010designing and an essay by Jans Borchers cite:borchers2008pattern
which drew inspiration from her critique both have over
1000 citations on Google Scholar shows that Tidwell’s perspective has
been impactful.  To get a sense of how the pattern community may have
been informed by this critique — along with related trends and concerns — we can look at
how the writers workshops at PLoP have evolved over time.  In Table [[tabplop]] a
selection of titles of workshop sessions show how the focus of PLoP evolved from
primarily ‘programming’ oriented to a much broader contextual view
over time.  Indeed, by 2019, the focus is almost exclusively ‘contextual’.

#+NAME: tabplop
#+CAPTION: Evolution of PLoP Writers Workshop topics in selected years: CLA in the wild! This gets deeper and deeper.
| *1997*                        | *2011*         | *2015*                            | *2019*               |
| Architecture                | Architecture | Pattern Writing                 | Group Architecture |
| Roles and Analysis          | Design       | Software Architecture & Process | Culture            |
| People and Process          | Information  | Cloud & Security                | Meta               |
| Domain Specific Techniques  | People       | Innovation & Analysis           | Education          |
| OO Techniques               | Pedagogy     | People & Education              |                    |
| Non-OO Techniques           |              |                                 |                    |

\rowcolors{2}{gray!25}{white}
** Worldview: ways of knowing and alternative discourse

The next layer beyond that comprise *worldviews* (e.g., Alexander’s view
that “There is a central quality which is the root criterion of life
and spirit in a man, a town, a building, or a wilderness”).

The situation with licensing on c2 is particularly interesting in
light of Alexander’s perspective that /APL/ was a “living language”.  In
principle, Wiki technology might have presented the opportunity to
realise this vision fully for the first time, in a virtual setting.
Wiki technology did become widely influential when it was combined
with a free content license on Wikipedia (originally GNU FDL, later
CC-By-SA).

Fast-forwarding to the present day, Christopher Alexander’s website
=patternlanguage.com= writes about [[https://www.patternlanguage.com/membership/memberstour3-struggle.html][The Struggle for People to be Free]] —
but it is not referencing freedom in the GNU sense.

In 1979 he was concerned: “Instead of being widely shared, the pattern
languages which determine how a town gets made becomes specialized and
private.”  In 2021, /APL/ itself is only legally available for
subscribers or for people who purchase a paper copy of the book. (Or
through a library!)  Of course, like many famous texts it can also be obtained
extra-legally for download as a PDF: but that format does not afford
downstream users the opportunity to collaborate on the text’s further
development.

Gabriel and Goldman talk about sharing and ‘gift culture’ in their
essay [[https://dreamsongs.com/MobSoftware.html][Mob Software: The Erotic Life of Code]], and discuss a way of
working that seems to bring back the early days of hacker culture.
(Notably, this essay was presented as a keynote talk at the same
programming conference where Alexander had spoken four years
previously.)  They reference the open source community — but not the
free software community, so we will follow Gabriel and Goldman’s usage
here — as the origin of Mob Software.

#+begin_quote
Because the open source proposition asked the crucial first question,
I include it in what I am calling “mob software,” but mob software
goes way beyond what open source is up to today.
#+end_quote

That “crucial first question” is: “What if what once was scarce is now abundant?”
It is well known that the PLoP conference series builds on this idea: it includes
shepherding and workshops cite:gabriel2002a as well as games, informal gifts, and
other measures that aim to create a sense of psychological safety: indeed, the central issue of
making a space where ‘failure’ is OK and even celebrated, as per Mob
Software. The essay develops its own criticisms of open source, e.g.,
“the open-source community is extremely conservative” and forking
happens rarely.  (Five years later, with the creation of Git, forking
became considerably more typical.)  Resonating with Tidwell’s critique
from above:

#+begin_quote
One difference between open source and mob software is that open
source topoi are technological while mob software topoi are people
centered.
#+end_quote

On a technical basis, Gabriel’s vision sounds a lot like today’s world
of /microservices/.
While his vision hasn’t fully come to pass — there are still many
services with proprietary source code — nowadays many big companies
are also big proponents of open source.  Here we can notice that
Gabriel was employing a technique of imagining [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND
FUTURES]], e.g., he imagined a future in which:

#+begin_quote
Mentoring circles and other forms of workshop are the mainstay of
software development education. There are hundreds of millions of
programmers.
#+end_quote

We would like to dig somewhat deeper into the foundations of the
worldview that Gabriel puts forth in this essay. Usefully, an article
by VanDrunen “traces the source of Gabriel’s ideas by examining the
authorities he cites and how he uses them and evaluates their validity
on their own terms” cite:vandrunenchristian.  His critique functions
as a (detailed) [[DECONSTRUCTION][DECONSTRUCTION]] of the thinking behind Gabriel’s essay.
Some key excerpts appear in Table [[tabone]].

#+NAME: tabone
#+CAPTION: Key observations from VanDrunen’s critique of Gabriel’s “Mob Software” essay
#+ATTR_LATEX: :environment longtable :align |p{\textwidth}|  :label tabone
|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| “Kauffman’s work is about a rediscovery of the sacred, and it amounts to a proposal of the laws of self-organization as a new deity”                                                                                                                  |
| “One thing we find in common with Lewis Thomas’s ants, Kauffman’s autocatalytic sets of proteins, and the agents inhabiting Sugarscape is that they all lack intelligence.”                                                                           |
| “In other words, the rules given by Gabriel describe only the conforming aspect of group behavior. In reality, there is a tension between independent and conforming tendencies, and the flock patterns emerge from the interaction between the two.” |
| “His examples of ‘mob activity’... the making of the Oxford English Dictionary, cathedral-building, and open source software discussed later—all had oversight, master-planning of some sort.”                                                        |
| “There are several distinct senses of ‘gift’ that lie behind these ideas, but common to each of them is the notation that a gift is a thing we do not get by our own efforts.” (quoting Hyde)                                                         |
| “Certainly proprietary code is shared property among those working in a corporate development team, but it is not common to the larger community of software developers and users.”                                                                   |
| “A computer program is not like a poem or a dance in this way; if the programmer is not able to produce something parsable in the programming language or cannot fit the instructions together in a logical way, the program simply will not work.”   |
| “Gabriel’s own experience may color his perception. He founded a software company that produced programs for Lisp development and which went bankrupt after 10 years.”                                                                                |
| “Moreover, if Gabriel means to suggest that these programming languages or models could have made programming more accessible to the masses lacking technical skill, it is quite a dubious claim”                                                    |
|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

** Myths: metaphors and narratives (longer term change)

Lastly, there are *myths or metaphors* (e.g., Alexander’s idea that the
architect’s work is done ‘for the glory of God’ (see Galle, 2020) or
his conception that ‘primitive’ dwellings contain more ‘life’).  To
emphasize, CLA does not dismiss myths in the slightest: on the
contrary, they are what drive the other layers.  Another term that is
used to characterise this layer is *narratives*.

VanDrunen surfaced various concepts in Gabriel’s essay that would be
at home at this level, for example, the concept of duende that Gabriel
takes over from Garcia Lorca originally derives from /dueño de casa/,
the name of a certain kind of household spirit.  VanDrunen’s critique
is also useful for our purposes because it points to the importance of
considering the deeper layers in developing a concept.  It’s not just
a matter of finding a culture’s myths: where may also be a conflict at
this level.

One important narrative for the pattern discourse is in plain view
within the terminology of problems and solutions, which come from
mathematics or physics.  Alexander’s worked /at the level of narrative/
to connect the patterns discoures to a scientific worldview, seeking a
sense of objectivity.  For example, in “The Atoms of Environmental
Structure”:

#+begin_quote
most designers ... say that the environment cannot be right or wrong
in any objective sense but that it can only be judged according to
criteria, or goals, or policies, or values, which have themselves been
arbitrarily chose.  We believe this point of view is mistaken.
#+end_quote

Notice that, here, the discourse is position as different from the
mainstream.  The key differentiator is not the language of problems
and solutions which would be familiar to anyone with an engineering
background; rather, but in a certain notion of /wholeness/.  Which
notion of wholeness remains to be surfaced.  Quoting, again, from “The
Atoms of Environmental Structure”:

#+begin_quote
We believe that all values can be replaced by one basic value:
everything desirable in life can be described in terms of freedom of
people’s underlying tendencies. ... The environment should give free
rein to all tendencies; conflicts between people’s tendencies must be
eliminated.
#+end_quote

Historically, there are at two major varieties of wholeness: one that
is based on progressive differentiation (perhaps understood as
unfolding from substance, per Spinoza), and the other generated by
interaction between components (perhaps that of mutually reflecting
monads, per Leibniz).  In support of these allusions, a quote of
Alexander from TNO: it “may be best if we redefine the concept of God
in a way that is more directly linked to the concept of ‘the whole.’”
This sounds a lot like Spinoza![fn:: Cf. cite:lord2020 for more on the theme of Spinoza and architecture.]

Can obtain some useful [[DISTANCE][DISTANCE]] by thinking about how different kinds
of wholeness are associated with different symbols. In terms of
metaphors, we have already encountered overt images like that of
Chartres cathedral.  If we allow ourselves to explore further afield,
other symbols of wholeness come to mind: these include the circle, the
cross — or potentially the cross inside a circle,
\begingroup\alch\symbol{"3B}\endgroup.[fn:: The alchemical symbol for
verdigris, and the planetary symbol for Earth.]  Related but more
elaborated symbols include the circle with a cross rising above it
(\varTerra) which is both the modern astronomical symbol for Earth and
also linked with the Carthusian order (/Stat crux dum volvitur orbis/:
the cross is steady while the world turns) — the Rod of Asclepius
(\Asclepius, for the deity associated with healing or making whole) —
this last symbol sometimes being inter-confused with the Caduceus
(\Caduceus, the symbol of Hermes, the deity assocated with mediation
of various forms, and also echoed in the planetary symbol for Mercury,
\begingroup\alch\symbol{"53}\endgroup).

These symbols are useful map-markers for the landscape we are
exploring.  In short, the pattern discourse seems to be drawn to /both/
major traditions of wholeness: and also to seek to unite them.  We get
the idea of unfolding in /APL/ and other pattern languages that work in
a top-down manner: however, we also get the notion of patterns and
principles that are generative of emergent phenomena.  As we mentioned
above, at this level, architecture and programming were seen, by
Alexander cite:alexander1999a, to unite: here pointing in the
direction of bio-hacking and nanotechnology (e.g., for molecular
self-assembly)[fn:: Cf. https://en.wikipedia.org/wiki/The_Peripheral]
— at least at the allusive level if not at the concrete level.

Relevant to the overall case we are making here, the following
quote suggests we are on a fruitful track:
#+begin_quote
Generative patterns work indirectly; they work on the underlying
structure of a problem (which may not be manifest in the problem)
rather than attacking the problem directly.[fn:: https://wiki.c2.com/?GenerativePattern]
#+end_quote

Clearly, another key metaphor in the discourse is the metaphor of /a language/:
#+begin_quote
... as in the case of natural languages, the pattern language is
generative. It not only tells us the rules of arrangement, but shows
us how to construct arrangements - as many as we want - which satisfy
the rules. (at /ibid./, quoting from /The Timeless Way Of Building/, pp. 185-6)
#+end_quote
Indeed, the prominence of linguistic metaphors reminds us that
Alexander’s writing contains many further traces of symbols associated
with Hermes:
#+begin_quote
In the house, [Hermes’] place is at the door, protecting the
threshold... He could be found around city gates, intersections, state
borders, and tombs (the gateways to the other world). cite:benvenuto1993hermes
#+end_quote
At the time when Hermes was actively embraced as a deity, he was
typically paired with Hestia, the goddess of the hearth, whose “domain
was internal, the closed, the fixed, the inward” (/ibid./)  The discourse
around patterns certainly contains aspects a movement “to archaic
roots” present in other 20th Century thought: but unlike some of
these, patterns methods are apparently working to restore “the
dialectic between centripital immobility and centrifugal mutation.”
One aspect of this is a movement towards foundations (in the form of
fundamental principles, per /ANO/): these are associated with Hestia.
The resolution within pattern language — as a form — seems to be along
Nietzschean lines: “anything that is becoming returns” (i.e., is
discussable as pattern), and “contingency resolves itself into
necessity” (i.e., the wholeness of generativity ultimately recovers the wholeness
of unfolding).[fn:: For further reflections on Nietzsche and wholeness, see cite:bishop2020holistic.]

* Discussion
<<Discussion>>

Anthropogenic climate change is a situation of major global concern in the early 21st Century.  It comes as no surprise that it has been examined separately by proponents of both CLA and DPL.  We
use this recent history to frame future work building on the survey
and case study developed above.

In an overview on =theconversation.com=, Cameron Tonkinwise and Abby
Mellick Lopes write:
#+begin_quote
A design pattern is first an observation: “People in that kind of designed situation tend to do this sort of thing”. It is then possible to design an intervention that redirects those tendencies. If that intervention succeeds, it can become a recommended pattern to help other designers: “If you encounter this kind of situation, try to make these kinds of interventions” cite:theconversation2021.
#+end_quote
They amplify the ‘ethical’ aspect of their thinking:
#+begin_quote
... the patterns we are talking about, context-specific interactions
between people and things, are more like habits. They are tendencies
that lead to repeated actions.
#+end_quote
The 41 patterns they have developed include examples like \textsc{The Night-Time Commons},[fn:: https://www.coolingthecommons.com/pattern%20deck/]
which:
#+begin_quote
... might shift daytime activities into cooler night times.  Some
places already have these patterns: night markets and night-time use
of outdoor spaces.  If locally adapted versions of these patterns
encourage people to adopt new habits, other patterns will be needed.
These will include, for example, ways to remind those cooling off
outdoors in the evening that others might be trying to sleep with
their naturally ventilating windows open.  Such interlinked patterns
point to the way pattern thinking moves from the big scale to the
small.
#+end_quote
Reading this, we were concerned that, while the Cooling the Commons patterns
do acknowledge “horizontal complexity” — namely, through interlinked patterns —
the process does not deal with the “vertical complexity” coming from
the fact that diurnal rhythms are deeply embedded in biology and
culture.  People have cultural beliefs about what are appropriate
activities for different times of day.  Public and domestic rituals
are organized about the daily cycle.  Times of day have symbolic
associations.  As far as we could tell, these authors focused on
more or less technical issues at the systems level, and did not acknowledge these
issues at the worldview and myth levels.  A more comprehensive
approach might, for instance, re-examine rituals to see which of them
relate to the phenomenon of sunrise versus the act of getting up and
starting the day, and then figuring out how to adapt these rituals to a new
schedule.  A suitable research strategy might be study how practices changed in
the past and adapted to new circumstances, such as industrialization
with its clockwork regimentation of the day.

Meanwhile, cite:HEINONEN2017101 discuss a CLA game that developed four
different scenarios in small groups.  The four scenarios were “Radical
Startups”, “Value-Driven Techemoths”, “Green DIY Engineers” and “New
Consciousness”.  As groups worked through the CLA for each scenario,
they developed a range of new ideas.  How would these have collated
with the patterns developed by Tonkinwise and Lopes and colleagues?
Might players have spotted ways in which the patterns would conflict
with deeper values — or ways in which they might be exploited to cause
chaos in the city cite:friction2016a?

Broadening our exploration of how design patterns relate to futures
studies, we should mention Schwartz cite:schwartz1996a (Appendix,
pp. 241-248), /viz./, his “Steps to Developing Scenarios”.  This process
follows an outline with a striking similarity to a design pattern
template.  Both Alexander and Schwartz advocate the identification of
driving forces in a context.  However, unlike Alexander, Schwartz does
not intend to resolve conflicts between the forces within a
harmonising design.  On the contrary, the aim in the scenario
development method is to understand how these forces might evolve and
lead to diverse scenarios.  As scenarios develop, they can serve as
the ground for developing new design work in Alexander’s sense.  In
the foregoing sections, we used a method from future studies to think
about design patterns.  We think that design patterns can be useful
inside scenarios, and also used to scaffold the design and evolution of
scenarios.

With this in mind, here are four scenarios that will be of
interest to DPL practitioners, roughly pegged to the four
layers of CLA.  We should emphasise that these scenarios are
not mutually exclusive.

** Scenario I. Patterns become explicitly computational.
Patterns have periodically been discussed in explicitly
computational terms — however, that direction of work so far
remains mostly at the level of a proposal
cite:alexander1999a,moran1971a, with limited
discipline-specific uptake within architectural design
cite:jacobus2009a,OXMAN1994141.  Could this change?  We wonder
if design patterns — and related designs for Ostrom-style
institutions cite:ostrom2009a (p. 11) — should be brought onto
a similar computational footing, and included in the
computational mix within climate modelling software.  These
developments might be accompanied by more mathematical
precision along the lines of the [[FORMALISE][FORMALISE]] pattern, e.g.,
drawing on and moving beyond computational paradigms such as
contract-based programming and the Semantic Web.

** Scenario II. Pattern languages become fully open source.
In the field of policy, ‘adaptive capacity’ describes a society’s
ability to recover after a shock
cite:thonicke2020advancing,magnan2010better.
This in turn is linked with the health and adaptivity of the society’s
institutions cite:fidelman2017institutions.  As we saw earlier,
innovation conflicts with consistency and efficacy — however,
innovation in fact may be a necessary response to other ongoing
environmental changes.  Mehaffy and coauthors worked with Ward
Cunningham to make their book /A New Pattern Language for Growing
Regions/ cite:mehaffy2020new into a wiki, [[http://npl.wiki][npl.wiki]], which is licensed
under CC BY-SA 4.0.  Will other pattern developers follow suit and
move to open licensing — and suitable infrastructures for working with open contents?

# add refs to reproducible research papers
# add refs to Minnesota 2050 paper
# Maybe add a comment saying these people were ‘sort of’ working together (in different rooms)

** Scenario III. DPL, CLA, and PARs scaffold literacies  of collaboration.

As we’ve seen in our work with Emacs, PlanetMath, and
Peeragogy, projects need a lot more than simply access to
source code in order to thrive.  We see a link to the topic of
reproducible research.  Above and beyond the immediate
technical considerations cite:sandve2013ten, we think that
something is “reproducible” if it is teachable to someone new!
We’ve found Org Mode (and literate programming in general) to
be useful for this.  At the same time, collaboration across
different skill sets is challenging.  One reason we need
additional scaffolding would be familiar to the protagonists of
the story in Table 1A: “Innovation foils attempts to be
consistent and efficient” cite:tan2020uncertainty (p. 12).
Adapting to climate change won’t work if we only do business
as usual.  In the Minnesota 2050 project, participants were
selected from a variety of professions and leadership roles to
produce scenarios for energy and land use, and combined
modelling with scenario planning cite:olabisi2010.  However,
actually solving large-scale problems together in
interdisciplinary teams will require new thinking and
additional tools: to bridge between the viewpoints of, e.g.,
professional futurists, programmers, data scientists, local
farmers — and to draw on the insights of citizen scientists
cite:wildschut2017a.

** Scenario IV. Patterns eat Big Tech.
Reflecting on the increasingly contextual and transdisciplinary
nature of the discussions at PLoP and other venues, along with
the other points above, brings to mind Hesse’s /The Glass Bead
Game/.  This reference can help tie these points together at the
level of myth, metaphor, and narrative:
#+begin_quote
... the narrator informs us that the Game is like a universal
language: a way of connecting traditions and cultures from both the
East and the West and of playing with all disciplines and
values. cite:roberts2007conscientisation
#+end_quote
For those who are familiar with the novel, this reference also
suggests: proceed with caution.  How hierarchical do we want
our community, or our society, to be?  How critical are we
capable of being towards the tenets we hold dear?  When
reflecting on futures-oriented discourses, Slaughter described
these as sitting on a spectrum: “participatory and open at one
pole and closed (or professionalised) at the other”
cite:SLAUGHTER1989447.  In /The Glass Bead Game/, everyone is
able to play, but only some become excellent.  Related issues
show up in our current technological culture
cite:unger2019knowledge — how do they show up in the cultures
we might envision?  With due care patterns might become the basis
of widespread technical literacies, not for an elite group of
hackers or for a few highly-paid rockstars, but for everyone.

# maybe reference the Bloom’s 2 Sigma problem here
# Only half of the students will make it to the end of the course and only half of those get A’s

** Summary

# Need to recap Alexander 1999 at some point

In 1999, Alexander talked about “the generation of a living
world” cite:alexander1999a.  Our /vision for change/ — now
speaking as part of the design pattern community — is that all
of these scenarios will be given serious thought.  /Progress/
will become measurable through markers of debate and ensuing
trial-and-error uptake of the methods we’ve described.  The
Emacs Research Group can use these ideas to help connect with
potential stakeholders.  The Peeragogy network can help
facilitate some of the discussions and projects.  As we gather
evidence, we can return to the futures community and share what
we’ve learned with them. If the ideas we have considered here
became part of a shared outlook between all of these different
communities, many things may start to move quickly.

* Related work
<<Related_Work>>
TBA.

- Alexander himself in /Synthesis of Form/
- Damasio’s analysis of living bodies
- The ideas we were criticising in our Futures paper
- CLS and such from Wildman
- Perhaps anything recent from PLoP, since they have emphasised meta-level stuff recently
- Technical things that are like design patterns, e.g.,
  contracts, ZKs
- Friereian /conscientização/ cite:roberts2007conscientisation

** Notes from the discussion
Vitor (Laptop)
about the bill gates profile:
https://news.softpedia.com/news/did-you-know-the-default-microsoft-outlook-contact-pic-was-bill-gates-mug-shot-520636.shtml
14:04
Vitor: do people see this as a problem? This is a big liability
They aren't aware of the acronyms — I know PAR but others might not
Maybe also people aren't so interested or motivated
We know there's a problem, but we now feel overwhelmed
https://discord.gg/Jzkynuba
in #reflection-pool
Alternative to A and B, not using the same schema as the patterns
Posted a sketch to tie together ERG and the PLoP patterns to make a more coherent tale
Ray: at the lower level, 2 more things, the shepherds if they accept it, then 1 month with them, and then a week of writers workshops, and we proposed an idea of having our own workshop on CLA+DPL.  We don't need to mention peeragogy in this paper.  It's suffused with it.
We have PARs, we have a community w/ Emacs that's adopting the principles.  It doesn't have to say anything specific about peeragogy — it's extending CLA — we don't have to use the word peeragogy.

We shouldn't worry about anonymity here.

If it has it, we don't need to name it.
Charlie: with Project Management stuff, referencing PM stuff might not make sense?  Maybe in related work we can mention it.

Future work: if we could help with a difficult pressing problem to break something down for something that's too big for any one human.  These are techniques to approach something that no one human mind, or only .0001% of minds can wrap their minds around — these are ways use use the hive-mind more, giving people who aren't there all the time ways to catch up.
We have the practical stuff w/ what we've done with ERG, it is a solid case-study.
JC: Lots of project interoperating.

Ray: also, with the Handbook, maybe there are different local things — right now for me, the paper is the main thing; for people who are involved with that, the podcast is the main thing. The community has grown so that we're not all in one little red peeragogical school room together, but we have multiple chats, multiple discussions, presentations, projects.
As long as we have the management that keeps track, part of it is at the worldview level!  It's grown, and it's different from what it was 5 years ago, when we might have just worked on the handbook.  Plus, there are people pushing back against the big handbook, so is that the way to go?  Minihandbooks, visual learning modes, podcast, papers and so on — they are all about the same thing but being presented in different ways.
Evolution from single thing to multiple things is an inevitable part of an endeavour.  Another Related Work thing could be the Iron Law of Oligarchy!!!
This technique is a way of trying to keep the communication lines open, giving autonomy with some central focus / guiding purpose.
Joe: Gender equity ? Men's space, women's space ? We open a call to whatever gender, colour, whatever — we ended up having only men, but those people didn't want to join...
When this happen it's an interesting thing... or is there something that turns people off and confuses them.  Maybe this is a reflection of trends in society that won't change over night.
Maybe we think (worldview) we think that we invited them, but the approach was pushing people out.
Ray: or worse-out it sounded like we were inviting people as tokens.
We have a paucity of gender diversity.
At the same time Charlotte has rowing in the morning; and she did put lots of comments in the paper
As a quick thing on mini-handbook, we had Handbook call at 1AM Joe's time, and Lisa was talking about the idea of doing one for intro, patterns, — intro for business and peeragogy, intro for community organisers and peeragogy.  If we have one book that appeals to one group, it might not appeal to the other.
So, get the group literate with a few patterns.  If they are hooked, then they will see that there's stuff that applies across any human endeavour, creating a common ground to all of them.
Will try to do some writing for the PAR.
Let's discuss the idea of how to integrate things.
E.g., with Emacs, they are definitely into free/open source
Then the key thing is extensible, customisable, self-documenting
This creates a sense of what a free/open computer program should be.
But then: where did they come from?  A certain hacker community around MIT.
To get an idea around that,  we get an account from Gabriel around where did this come from.
Let's put in a contrast to Gabriel, Steele, Stallman — Emacs is written in LISP
But object-oriented programmers have a different view of things
Let's take Ward Cunningham
He also introduced DPs into programming
They also have a hacker community, but they have a different notion of openness and sharing — but there's a difference in emphasis and understanding
So, OSI vs GNU have different ideas w/ different emphasis
They emphasise more the aspect of, can someone contribute?  Not just, they can add it on their blog.
What makes people say: "I want to learn more?" — what's the trigger, and how can we enhance the triggers?
Peeragogy also spontaneously appears in the ethos of these 2 hacker communities
The things that join us together are this-this-and-that — why do they want to know?  Will the see common values?
To complete the survey, there are opposing/critical views
Dawes, VanDrunen, Demby&Dryden — this openness doesn't seem to be too open to gender and ethnic balance
The things that put people together but that also put people apart, it's not a voting situation where if one-wins-one-loses.  If we look at "convincing" — it actually literally means "win-with"
How do we win-with the things that people want to do together
E.g., left and right wing — if I'm left I'm not right — but how can we help people to understand a 'convincing' method — that we're doing this in a good awy
We'll also have people who are just following the flow
Paola's comments on P2P
VB: Basics of communism deals w/ this idea — no rulers, everybody rules, everybody is happy together, everyone is the same, this comes from an indigenous culture in which everybody speaks, everyone has the same value.  So e.g., in Brazil, the idea that "everbody is a brother"
In a Eurocentric way it's more greeks, romans, and so on — but in BZ the democracy of the indians is everybody is together
before they invented zero
Of course Mayans did invent zero
Go to Asia, there are different perspectives on how things organise — if you to to India then you get things like Sangha
Kuwait is a democracy of princes chosen by the people, they rule a country smaller than NJ
Maybe in Kuwait and Amazonia people will think about patterns in different ways
In different languages, different syntaxes, this brings in different assumptions.

VB: what's patterns, and what's the "average of patterns".  Average of the pattern is something else.  Maybe there's something I misheard.

3 fluke events in a row we get into a whole different world
Germanic langs — Swedish and norweigan can sound alike but be completely different
Why is the French-speaking part of Belgium not part of France?
Objects inside LISP...?
Maybe you understand enough only to misunderstand
VB: computing languages have similarities and differences
How can we concatenate the languages, making them resemble each other...? Or interoperate?
So, if we are talking about Emacs —

There are talks about "Clojure for Java" by Rich Hickey
And there's a book
14:53
Vitor (Laptop)
(there is a book for every-any thing)
14:53
Have Ward Cunningham and Richard Stallman even ever been in the same room?
Maybe because they were isolated they had diverging views on openness
Internationalism of education
Maybe it would be interesting to see how we can internationalise the knowledge / events ?
How to take from education sector?
VB: Just today I started studying communication in picture, and saw we have a "grammar of visual communication"
Things I can translate from languages, design, peers... now we can organise the toolbox
When we were talking about the User's perspective — with regard to Tidwell, and in the ERG thing.
Customisation being a way into programming — tailoring — personalised learning — how can you broadcast personalised learning?
What's the meta-cognitivism of each person that we can put together and help them; e.g., I think I know something from my perspective, but how do we put these together in the same caldron.
STEELE WALL
Ray: I did pull up a paper on edu-communiction
can give background for the UN
14:58
Vitor
My internet crashed

* Conclusion
<<Conclusion>>
We conclude with a PAR for the paper as a whole.
\bigskip

\noindent
*1. Review the intention: what do we expect to learn or make together?*
- Our intention was to apply the CLA method from future studies to
  design pattern theory, in order to provide a methodologically
  salient perspective on the future of pattern theory.
- We also applied CLA to ERG stuff.
- And to make sense of how these things connect with each other —
  practically, to show how causal layered analysis could work
  synergistically with pattern theory.
*2. Establish what is happening: what and how are we learning?*
# - We walked through the CLA’s layers, using the Poststructural Futures Toolbox to help surface connections and ideas that unpack the discourse around design pattern, drawing on empirical, interpretive and critical perspectives.
- We introduced the methods, then zoomed in on a concrete case study that connected CLA with PARs and patterns; we can compare this with our deep dive into patterns.
- Lastly, we connected our observations with some broader literature on future studies to propose some possible scenarios for the ways in which patterns will evolve, specifically focusing on adaptation to climate change.
*3. What are some different perspectives on what’s happening?*
# - JC: I did most of the hands-on-the-keyboard writing up to 11/06/2021, aided by frequent and detailed discussions with Ray, and an editorial perspective added by Charlie.  We went over the material in depth and there are lots of notes that didn’t make it into the paper!  I’m looking forward to discussing the content with ERG. We have used CLA to engage in a process of Friereian /conscientização/ cite:roberts2007conscientisation, drawing on [[SERENDIPITY][SERENDIPITY]], transdisciplinarity, and the process of “drinking our own champagne”.
- JC: These different communities need to be talking to each other.
- Ray: Do conclusions come to me when I reread?
- CD: Keep in mind that these are patterns people but not CLA people — the inverse problem is possible here.
- CP: Fearless Change is related work in connection with the Futures stuff.  You need things like this as projects develop over time to understand what’s going on.  I feel more access to this paper than the Futures paper and I got burnt out on trying with that; maybe I should be doing more reading/homework.
- LV: I’m glad everyone is on board in reviewing the paper but we’re so last-minute that it would be hard to address anything very substantial.  I’m glad to see we are polishing the paper rather than compromising.  B/c I missed the first 30 minutes of this meeting some wagons might have left.  This model of sending the paper for revision is a good way to do away with the pressure of submitting; it’s a soft deadline in a way.  I’ve had moments of strife with submitting papers in the past.  The meeting itself feels good.  The diverse views of contributors provides some wealth because people are discovering things in different ways.  We’ve nicely modularised the pattern of reviewing a paper, and brought different gazes that can only lead to more wealth and appreciation.
*4. What did we learn or change?*
- Relative to an earlier preprint where we attempted to describe patterns to the futures community, this seems much more mature.  It is a fitting third installation to round out Joe’s “Patterns” trilogy cite:corneli2015a,Corneli2018.  In contrast to the vision of Alexander, this one is more humanistic in nature.
- There’s a whole behind the scenes, there’s a lot of heart and soul here that could make it more like joint autobiography.
*5. What else should we change going forward?*
- We will have to see whether PLoP accepts any of our proposals; both as a submission for PLoP 2021, and, more speculatively, as a way of working.
- Could we have a skimable version of the paper, like in biology, where you can look at the plots: it’s like a visual summary and you can decide how far to go with it then.
- We believe we have an answer to Alexander’s question.  We’re not sure he’ll like it.  The ‘Chartres of programming’ has been hidden in plain view all along.  Alejandro Jodorowsky refers to the Marseilles Tarot as a “nomadic cathedral” cite:jodorowsky2009way (p. 10); pattern languages are the same sort of thing.
- What if Peeragogy had started in 1997?  The concept is timeless, you could have a local execution without a robust internet.

\appendix
* APPENDIX: Patterns
<<appendix>>
*** DECONSTRUCTION
<<DECONSTRUCTION>>

- *Context*: A text: here meaning anything that can be critiqued — a movie, a book, a worldview, a person — something or someone that can be read.  (/NB./, every text has a /context/: much like every pattern has a context.)
- *Problem*: The existence of a ‘text’ suggests a *conflict* between (1) the notion of truth embedded in that text, and (2) the text itself as historically situated or positioned within relationships of power.
- *Solution*: We break apart the text’s components, asking what is visible and what is invisible? Who or what is privileged within or by the text? Which assumptions does the text make preferable?  How is ‘truth’ produced within the text?  Who is silenced?  In this way, we ‘deconstruct’ the universality of the text and show its contingent nature.

# LV: It feels like this is full-circle back to Sapir-Whorf where the language you speak frames how you think... if language is supposed to be the trace of our cognition, and have an input on how you think — the way we use or modify idioms is telling of how culture manifests itself into language & language manifests into cognition.

\noindent
*Example* The technique of _deconstruction_ examines how a
text is constructed and often does this by evoking the contingencies and potential
arbitrariness of symbols in language.  In
our pizza example, we have the book on running a business.  When the couple
revisited it critically, they noted some peculiarities of the language.
For instance, the book routinely divided people into winners and
losers, even in contexts which had nothing much to do with
competition.  The upshot of this was that the couple came away with
the impression that the language of the book, the way it talks about social
organisation, and the way it itself organized
the material embodied a worldview at odds with their values.  By
seeking advice in this book indiscriminately, they were unwittingly
following the implicit worldview, leading to frustration
and confusion.

*** GENEALOGY
<<GENEALOGY>>

- *Context*: History is not just the passage of time, but an unfolding of different positions. We consider a /concept/ or /idea/ to be historically situated in this sense.
- *Problem*: Within history, certain discourses have been hegemonic. A given term or concept will have developed through varied discourses: this observation *conflicts* with a naive notion of terms or concepts as simply ‘given’ or universally true.
- *Solution*: One takes a word or concept, looks at the way it
  has been understood and interpreted in different eras, and
  how these different understandings came about.  We ask: which
  discourses have been victorious in constituting the present?
  How have they travelled through history? What have been the
  points in which the issues have become important or
  contentious?  By tracing the evolution of a given term or
  concept through periods of identity or sameness, and through
  periods of difference or divergence, we come face-to-face
  with its generative potential.

\noindent
*Example*   On a personal
scale, we have Mom's notion of "restaurant".  When she was small, a
restaurant was a magical place where her family would go on special
occasions.  When she grew up, a restaurant was a place to socialize
with friends and meet new people.  Lately, it has been synonymous with
balance sheets, market share, supply chains, and customer
satisfaction.  She wonders how such a thorough a change happened
so fast and whether she could recover some aspects of the earlier
understandings into the current context.

*** DISTANCE
<<DISTANCE>>

- *Context*: The present.
- *Problem*: The present seems ‘normal’, but this *conflicts* with any impetus to change.
- *Solution*: We ask: which scenarios make the present remarkable?  Make it unfamiliar? Denaturalize it?  Where are these scenarios, e.g., are they in historical space — the futures that could have been — or in present or future space? By establishing a sense of distance from the present, we can return to explore the present from a different point of view.  We are more likely to see the ever-changing character of the present, points of leverage, and how to use them.

\noindent
*Example* As long as our couple was in the thick
of things, running the shop and fixing one problem after another, they
couldn't really see what was going on, only feel uneasy.  In order to
interpret their situation, they needed to create some mental space by
bringing in other possibilities.  After a conversation where they
explored other restaurants they had known, recalled how things were in
the past, thought of ways they thought things might have gone better
or worse but didn't, they returned to the current situation and found
themselves noticing all sorts of things which hitherto they had been
taking for granted.

*** ALTERNATIVE PASTS AND FUTURES
<<ALTERNATIVE PASTS AND FUTURES>>

- *Context*: The past that we see as truth is in fact the particular writing of history: it is a text amenable to [[DECONSTRUCTION][DECONSTRUCTION]].  The futures that we are ‘given’ are, similarly, only some of the ones that are in-principle-possible due to the evolutionary nature of concepts exposed by their [[GENEALOGY][GENEALOGY]].
- *Problem*: The past and future are put to use within discourse, resulting in some winners and some losers.  The results we see may *conflict* with our sense of what we would prefer to have happen.
- *Solution*: With this technique, one notes how and why some
  interpretations of the past and visions of the future have
  been promoted whilst others have been suppressed. We ask:
  which interpretation of past is valorized?  What histories
  make the present problematic?  Which vision of the future is
  used to maintain the present?  Alternatively, which visions
  undo the unity of the present?

\medskip
\noindent
*Example*  Based upon his
daily readings of old-time New Englanders, Pop realizes that the view
of history as an inexorably steady march of economic and technical
progress leaves a lot out of the picture.  If so much was left out of
our recall of the past, what aspects of the present are being ignored and
what potential futures are being dismissed?  This line of questioning inspires
Pop to rethink the restaurant as a modern-day Walden cabin in which they
commune with nature for one half of the week and commune with their
neighbors for the other half of the week.

*** REORDERING KNOWLEDGE
<<REORDERING KNOWLEDGE>>
- *Context*: Trends and problems are emergent, historical, and political: they are embedded in complex webs of becoming.
- *Problem*: It’s not always obvious how to move /between/ the ‘layers’ mentioned above. This *conflicts* with any given effort to empower oneself with a deeper understanding of the situation.
- *Solution*: We ask: how does the ordering of knowledge differ across civilization, gender and episteme? What or Who is othered? How does it denaturalize current orderings, making them peculiar instead of universal? What tools can we use to reorder knowledge, to make it available in new forms without necessarily requiring the same historical baggage?

\noindent
*Example*
In the technique of _reordering knowledge_, one asks what principles
have been used to organize knowledge, what are the implications to
this, and what are alternatives.  In rereading their books, our couple
notes that they are organized about a framework of impersonal market
forces.  This reinforces a dog-eat-dog view of the world which, in
turn, rationalizes profiteering and hypercompetition.  Thus, the
couple decides to re-organize the patterns for running a business in a
people-centric manner where markets are but one type of social
institution amongst many.

*** FORMAL PATTERNS
<<FORMALISE>>

- *Context*: In our work with project- and change-management
  \textsc{Technologies} across a widely distributed \textsc{Community}.
- *Problem*: Using patterns, todo items, CLA, and PARs in an intuitive
  manner is clearly workable at a small scale, but could become
  chaotic when we scale up; this *conflicts* with our perspective that
  these methods can be applied broadly.
- *Solution*: Can we develop a more mathematically precise way to
  describe this set of tools?  We might build on the earlier work of
  Corneli et al. cite:Corneli2018 which describes patterns as
  /conceptual blends/.

\noindent
*Example*
Let’s add some examples with reference to the world of free/libre/open source software?

*** SERENDIPITY
<<SERENDIPITY>>
- *Context*: Within an ongoing research and development project.
- *Problem*: The idea of planning *conflicts* with our experience that
  reliance on plans can produce rigid behaviour and a corresponding
  brittleness.
- *Solution*: We adapt our plans to increase our /general/ preparedness, and adapt our strategy to decrease our reliance on accurate /forecasting/. This operationalises the ‘serendipity pattern’ described by Merton.[fn:: “The serendipity pattern refers to the fairly common experience of observing an unanticipated, anomalous and strategic datum which becomes the occasion for developing a new theory or for extending an existing theory… ” cite:merton1948bearing, reprinted in cite:merton.]

\noindent
*Example*
Let’s add some examples with reference to the world of open source?
*** RECOMMENDER
<<RECOMMENDER>>
- *Context*: Within our use of \textsc{Technologies} and materials we
  could \textsc{Reduce, reuse, recycle}.
- *Problem*: As the body of content grows, it can be harder to find
  relevant material or the best collaborators in a global pool: this
  *conflicts* with our desire to achieve excellence.
- *Solution*: New software that can help surface relevant
  material and opportunities would be useful.  Existing
  implementations include “scrobbling” audio tracks to Last.fm,
  or buying recommended products on Amazon.  The same ideas can
  be adapted to free/libre/open source contents, research,
  learning, and other domains.
\noindent
*Example*
Let’s add some examples with reference to the world of free/libre/open source software?

*** DIVERSITY
<<DIVERSITY>>
- *Context*: Within a \textsc{Project}.
- *Problem*: If we only collaborate within a relatively homogeneous
  population of people who think like us this *conflicts* with our
  desire to find new ideas and new solutions, and to make things that
  are widely useful.
- *Solution*: Look out for different contexts in which we can
  collaborate with different people; they don’t all have to work on
  the same project.  We recognise that collaboration is easier when we
  share similar languages and literacies.  In cases where
  collaboration needs to be made tighter, prefer ways of exchanging
  information and expertise with \textsc{Newcomers} that makes the
  relationship one of peers rather than a one-way hierarchy.
  Understand the historical landscape through techniques like [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND FUTURES]].  At the same time, by inviting people
  who were not closely connected or emotionally invested in your
  project, you can get the advantages of [[DISTANCE][DISTANCE]], at least
  vicariously.

\noindent *Example* Let’s add some examples with reference to the world
of free/libre/open source software?  Sometimes, diversity is absent
for seemingly contigent historical reasons, rather than as a design
principle, e.g., within free software only about 5% of the
participants are female, whereas women occupy around 25% of computing
occupations cite:Vedres2019.

* APPENDIX: Max-Neef needs                                        :noexport:
Because the notion of “need” is hard to fully pin down, as a working assumption we will follow Alexander and “replace the idea of need by the idea of what people are trying to do” cite:alexander1970a.  However, we will cross-check our work against an established catalogue of needs in an Appendix.

#+BEGIN_LATEX
\newpage
\begin{landscape}
\textbf{APPENDIX: Max-Need needs}
\medskip

{\small
\begin{tabular}{p{1em}lp{.3\textwidth}p{.3\textwidth}p{.3\textwidth}p{.3\textwidth}}
& \emph{Existential needs:}& \emph{Being}  & \emph{Having}  & \emph{Doing}  & \emph{Interacting}\\
&Axiological needs &&&&\\
\begingroup\alch\symbol{"51}\endgroup&
Subsistence & physical health, mental health, equilibrium, sense of humour, adaptability & food, shelter, work & feed, procreate, rest, work & living environment, social setting\\
\begingroup\alch\symbol{"53}\endgroup&
Protection  & care, adaptability, autonomy, equilibrium, solidarity & insurance systems, savings, social security, health systems, rights, family, work & cooperate, prevent, plan, take care of, cure, help & living space, social environment, dwelling \\
\begingroup\alch\symbol{"54}\endgroup&
Affection & self-esteem, solidarity, respect, tolerance, generosity, receptiveness, passion, determination, sensuality, sense of humour & friendships, family, partnerships, relationships with nature & make love, caress, express emotions, share, take care of, cultivate, appreciate & privacy, intimacy, home, space of togetherness\\
\begingroup\alch\symbol{"3B}\endgroup&
Understanding & critical conscience, receptiveness, curiosity, astonishment, discipline, intuition, rationality & literature, teachers, method, educational policies, communication policies & investigate, study, experiment, educate, analyze, meditate & settings of formative interaction, schools, universities, academies, groups, communities, family\\
\begingroup\alch\symbol{"55}\endgroup&
Participation & adaptability, receptiveness, solidarity, willingness, determination, dedication, respect, passion, sense of humour & rights, responsibilities, duties, privileges, work & become affiliated, cooperate, propose, share, dissent, obey, interact, agree on, express opinions & settings of participative interaction, parties, associations, churches, communities, neighbourhoods, family\\
\begingroup\alch\symbol{"56}\endgroup&
Idleness & curiosity, receptiveness, imagination, recklessness, sense of humour, tranquility, sensuality & games, spectacles, clubs, parties, peace of mind & daydream, brood, dream, recall old times, give way to fantasies, remember, relax, have fun, play & privacy, intimacy, spaces of closeness, free time, surroundings, landscapes \\
\begingroup\alch\symbol{"57}\endgroup&
Creation & passion, determination, intuition, imagination, boldness, rationality, autonomy, inventiveness, curiosity & abilities, skills, method, work & work, invent, build, design, compose, interpret & productive and feedback settings, workshops, cultural groups, audiences, spaces for expression, temporal freedom\\
\begingroup\alch\symbol{"58}\endgroup&
Identity & sense of belonging, consistency, differentiation, self-esteem, assertiveness & symbols, language, religion, habits, customs, reference groups, sexuality, values, norms, historical memory, work & commit oneself, integrate oneself, confront, decide on, get to know oneself, recognize oneself, actualize oneself, grow & social rhythms, everyday settings, settings which one belongs to, maturation stages\\
\begingroup\alch\symbol{"59}\endgroup&
Freedom & autonomy, self-esteem, determination, passion, assertiveness, open-mindedness, boldness, rebelliousness, tolerance & equal rights & dissent, choose, be different from, run risks, develop awareness, commit oneself, disobey & temporal/spatial plasticity\\
\end{tabular}
}
\end{landscape}
#+END_LATEX

* Discussion draft 2                                              :noexport:
<<Discussion>>

[JC: This section is mostly first draft status and perhaps we should
quickly turn to the discussion of *climate change* rather than the sort
of ruminative stuff that’s here currently.  But, maybe the ruminations
can help scaffold that.]

We think that this tripartite workflow of /reflection/, /integration/, and
/operationalisation/ will be useful in many settings.  The three
components are are mutually supportive.  Without one or more of them,
we run the risk of missing something important.  Indeed, we could
describe a correspondence between these high-level methods and the
design pattern form itself:
#+BEGIN_LATEX
\begin{equation*}
\begin{array}{llcl}
\mathit{reflection}&(\mathrm{PAR}) &\approx& \mathit{context}\\
\mathit{integration}&(\mathrm{CLA}) &\approx& \mathit{problem}\\
\mathit{operationalisation}&(\mathrm{Patterns}) &\approx& \mathit{solution}\\
\end{array}
\end{equation*}
#+END_LATEX

How could these elaborated methods further enliven the pattern
discourse its full transdisciplinary extent?  One way to address that
question is to think about how the methods we’ve talked about relate
to other “pattern-like” discourses.

** Diversion on pattern-like discourses
[JC: It’s not that we necessarily need to have any pointers on
technical implementation stuff here, but I was otherwise just a bit
distracted about these things, and wondering where our technical work
fits in.  So, I started doing a little sketching here.]

There are many different kinds of templates that people use for design
purposes; Corneli et al. cite:Corneli2018 provide a partial survey.
Here are three that have a particularly computational flavour.

*** Zettlekasten

‘Zettlekasten’ means /slip-box/.  The ZK method (for short) has been
popularised recently through software packages like Roam Research, Org
Roam, Obsidian, Zettlr, and others.  The central common features of ZK
tools are that they provide a collection of named notes, which can be
linked using wiki-style links; the software maintains /backlinks/
between these nodes.  While the backlink features existed in Mediawiki
and other wikis, it has had a renaissance with ZK, which also includes
some methodological points about how to write.  Nodes inside ZK are
“pattern-like” in that they have an upstream and downstream context,
determined by backlinks and standard forward links respectively.

*** Contract-based programming

In contract-based programming, functions are given explicit pre- and
post- conditions.  Alongside checking whether an implementation
matches its specification, this means that potential users of a
function can reason about their contextual behaviour based on reading
the contracts, without having to actually run the code.
Contract-based programs are “pattern-like” in that their operating
environment or /upstream context/ is defined; the way they modify this
environment is also defined as a /downstream context/.

*** Tuple-stores

The basic flavour of a tuple-store is a /triple store/ in which each
element is a subject-verb-object triple.  Some tuple stores expand
this, e.g., with a time period in which the triple is considered to be
true, or with the notion of a graph which collects certain triples,
and so on.  Various notions of ‘context’ are embedded here: a given
point in time, for example, could be taken to represent a given state
of an evolving world in which a given fact is contextualised.  At any
given point in time, a subject can also be considered relative to
different contextually-related objects.  The notion of ‘problem’ and
‘solution’ is less obviously apparent, but one straightforward
way to understand these concepts here as queries and answers to queries.

** Futures work

[JC: Not sure if needed, just pencilling this in, in case we want to
recycle the most patterns-focused part of our /Futures/ submission.]

To broaden our exploration of how design patterns relate to futures
studies, we refer to Schwartz cite:schwartz1996a (Appendix,
pp. 241-248), viz., his “Steps to Developing Scenarios”.  This process
follows an outline with a striking similarity to a design pattern
template.  Both Alexander and Schwartz advocate the identification of
driving forces in a context.  However, unlike Alexander, Schwartz does
not intend to resolve conflicts between the forces within a
harmonising design.  On the contrary, the aim in the scenario development
method is to understand how these forces might evolve and lead to
diverse scenarios.  As scenarios develop, they can serve as the ground
for developing new design work in Alexander’s sense.

In the foregoing sections, we used a method from future studies to think about design patterns.  We also think that design patterns can be very useful for scaffolding thinking about the future.  To assist in describing the next steps building on this work, we can be aided by a few more patterns.

*** ROADMAP
<<ROADMAP>>
(This resummarises the \textsc{Roadmap} pattern cite:corneli2015a.)

- Context :: A group needs to coordinate its activities over a period of time.
- Problem :: The landscape is complex and not completely knowable *BUT* adjustment to action based on feedback is possible;
- Solution :: Use an explicit mechanism to share information about goals, obstacles, methods, and resources.

*** PARTICIPATORY SCENARIO PLANNING
<<PARTICIPATORY SCENARIO PLANNING>>
- Context :: You want to plan for possible future scenarios.
- Problem ::  You have an interested group *BUT* no “expert” has all the answers;
- *Solution* :: Pool the collected expertise of the affected communities.

*** PLAY TO ANTICIPATE THE FUTURE
<<PLAY TO ANTICIPATE THE FUTURE>>
- Context :: You want to have fun with friends, colleagues or acquaintances.
- Problem :: You want to explore possible futures *BUT* time travel does not exist and you don’t know what to expect
- Solution :: Play a game that lets you experience a plausible future scenario together.

** Future work

[JC: Pretty much rough draft status.]

Relative to the analysis and case study, here are high-level issues collected from across the layers we surveyed, which seem to need further attention.

- Litany :: It could be useful to develop a pattern language of
  critiques and flaws of the pattern method, elaborating the
  criticisms collected by Dawes and Ostwald, and showing how and where
  these criticisms can be usefully applied, or where they are out of
  scope.  One way to explore this material would be via the [[PLAY TO ANTICIPATE THE FUTURE][PLAY TO
  ANTICIPATE THE FUTURE]] pattern, adapting a game like “Flaws of the
  Smart City” cite:friction2016a to develop a playful approach to
  engage with “Flaws of the Design Pattern Methodology”.  To the
  extent that we can [[FORMALISE][FORMALISE]] the objects under discussion, some of
  these issues can be explored computationally.  So far, patterns have
  been /discussed/ in explicitly computational terms, though that
  direction of work seems to be mostly at the level of a proposal
  (Alexander, 1999; Moran, 1971), within limited discipline-specific
  uptake within architectural design (Jacobus, 2009; Oxman, 1994).
  Can this change?
- System :: Develop a pattern language of PLoP, more thoroughly
  reconstructing the thematic and historical development of the
  research to date and elaborating its next steps.  This is one place
  in which the [[ROADMAP][ROADMAP]] pattern would apply: in this case the project
  would begin by building our roadmap for the future relative to the
  existing landscape, drawing on the [[GENEALOGY][GENEALOGY]] pattern. It would be
  useful to have an improved a technical system for working with
  patterns: here the \textsc{Reduce, Reuse, Recycle} cite:corneli2015a
  pattern is particularly relevant, as is the [[REORDERING KNOWLEDGE][REORDERING KNOWLEDGE]]
  pattern.  The Emacs Research Group could potentially help design
  this system, along with downstream applications like a [[RECOMMENDER][RECOMMENDER]].
- Worldview :: Develop a pattern language of the philosophical
  commitments held by practitioners, using [[ALTERNATIVE PASTS AND FUTURES][ALTERNATIVE PASTS AND
  FUTURES]] to bring out the fact that we are not necessarily living in
  “the same” world, according to our different worldviews, and to use
  this to enhance [[DIVERSITY][DIVERSITY]] of thought.  Some friction is likely to
  come up when we run into different kinds of tool use.  Perhaps the
  metaphor of /interoperability/ from Clojure could be helpful in
  sorting some of these things out.
- Myth :: Develop a catalogue of significant symbols used by
  practitioners.  Notice that apart from being an experience or
  mindset [[SERENDIPITY][SERENDIPITY]] is also a way of narrating and thinking about
  experience, and that these skills are teachable.  The increasingly
  contextual and transdisciplinary nature of the discussions at PLoP
  and other venues suggest that it may be time to redevelop pattern
  language methods more formally along the lines of /The Glass Bead
  Game/.  However, we should carefully examine whether this is a
  discourse only for experts and specialists, or whether it is a
  popular literacy. Slaughter described futures-oriented activities as
  a spectrum: “participatory and open at one pole and closed (or
  professionalised) at the other”
  cite:SLAUGHTER1989447. [[DECONSTRUCTION][DECONSTRUCTION]] and other elements of the
  poststructural futures toolbox could be useful here.  At the level
  of classical myth we can notice a tension between Prometheus and
  Themis: the specialist artisan who snatches fire from the gods, and
  the titan Themis whose tool is the scales of justice.

* The end                                                           :ignore:

#+begin_export latex
\bibliographystyle{ACM-Reference-Format-Journals}
\bibliography{./main}
#+end_export

\clearpage
* Appendix: Critical apparatus!                                   :noexport:

** Major liabilities
**** TODO
** *Things to work on for the paper as a whole!*
:PROPERTIES:
:UNNUMBERED: t
:END:
**** DONE Integrate changes from the Google Doc into the Org mode upstream sources
** *Things to work on for finalising the submission*
:PROPERTIES:
:UNNUMBERED: t
:END:
**** DONE Typeset things using their standard format
**** DONE Get the author names and addresses sorted out (mostly!)
** *Things to work on in the Abstract*
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO Read it over and make sure it still matches the contents
** *Things to work on in Section [[Introduction]]* (Introduction)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO Read it over and make sure it still matches the contents
**** TODO Mention that these are two peaks on the same iceberg!
- Ray had this insight when he was on a walk
** *Things to work on in Section [[methods]]* (Methods)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO Check properly vs the theory of deconstruction, myth, etc.
**** TODO Get the pizza story integrated
**** TODO Move the table outline part B into the main section where they fit
** *Things to work on in Section [[Figure]]* (Case Study)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO [#A] Check: What do patterns actually do for us in practical terms?
Detailed accounting of how these paragraphs relate to the patterns
introduced above appear in the next several footnotes, this should be
checked to see which is more useful!
**** TODO [#A] Add EXAMPLES for the new patterns
**** TODO [#A] Integrate the ‘unpacking of open source’
- Reverse the blend to reconstruct the upstream ideas of open source
- This is a nice way to think about deconstuction - what are the threads
- ‘Co-pattern’ as a _tentative concept_
- Remember the discussion about Dickens Satanic Mills: what would be the four freedoms then?  (or for AI)
  - Industrialisation, pomodoro!
  - Four freedoms.
** *Things to work on in Section [[Ground]]* (Survey)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO Check it over
**** TODO Could we take VanDrunen’s work further with reference to the other Christian author Ray was reading?
- Series of books on Bible scholarship “What is Postmodern Biblical Criticism” w/ postmodern papers
  - He did a cogent job of explaining deconstruction
  - Might be interesting to see what else would be needed
- The other book is “The Gift”
  - The mythology of the rich in the overproducing nations... “black soul” etc. obscures modern poverty — this would resonate with the Christian ethos
  - Voluntary poverty and social justice
**** TODO Do we really need the Hermes-Hestia thing?

** *Things to work on in Section [[Discussion]]* (Discussion)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO Integrate comments from Noorah when they arrive
**** TODO Could we design a CLA+DPL workshop that would take the scenarios we discussed further?

** *Things to work on in Section [[Related_Work]]* (Related Work)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO [#A] This needs to be written!!
**** TODO [#A] Reread Alexander 1999 and make sure that we adequately address the issues he raises
**** TODO Alexander Synthesis of Form diagram can go in here
**** TODO What if we were to guide whatever algorithm w/ a Structure-Note (categories, tags, filters)
- Think of it as saved queries for all the stuff that touches upon patterns
- You’ll have a tag called ‘pattern’ — you’d like to see only the notes associated with patterns
- So the file is intention-based and every heading is a potential query to be made into the file
- Does it have a tag called pattern?  Is it linked to a depth of 2 with =[[Pattern]]=
- When you incubate these for the garden you can separate user tags and system tags
** *Things to work on in Section [[Conclusion]]* (Conclusion)
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO [#A] Make sure to get everyone’s perspectives on what is happening!
** *Things to work on in the References*
:PROPERTIES:
:UNNUMBERED: t
:END:
**** TODO [#A] Try to reduce the number of references by at least 10%
**** TODO [#A] Check the formating of the references, dates and such
